name: Run application

on:
  schedule:
    # Run every 25th minute
    - cron:  '*/25 * * * *'

  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-20.04
    # if there is no artifact to download
    continue-on-error: true

    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      # This step is using CREDENTIALS and RECEIVERS Github Actions secrets. 
      # View the README.md file for instructions about secrets contents.
      - name: Create Credentials and Receivers files
        env:
          CREDENTIALS: ${{ secrets.CREDENTIALS }}
          RECEIVERS: ${{ secrets.RECEIVERS }}
        run: |
          echo "$CREDENTIALS" > CREDENTIALS.yaml
          echo "$RECEIVERS" > RECEIVERS.txt

      - name: Install requirements
        run: python3 -m pip install -r requirements.txt

      - name: Download execution timetable from the last workflow
        id: download_exec_timetable
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: main.yml
          name: exec_timetable
          path: ./.
          branch: master

      # We have implemented this because sometimes the download step above would not retrieve
      # the artifacts uploaded from the last workflow returning the {"count":11,"value":"Uri expired"}
      # error.
      - name: Sleep for 10 seconds if Download exec timetable step failed
        shell: bash
        run: sleep 10s
        if: ${{ always() && steps.download_exec_timetable.outcome == 'failure' }}

      - name: Try again to download execution timetable from the last workflow
        if: ${{ always() && steps.download_exec_timetable.outcome == 'failure' }}
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          workflow: main.yml
          name: exec_timetable
          path: ./.
          branch: master

      # if Download exec timetable step failed still run the script
      - name: Run main application
        if: always()
        run: python3 main.py

      - name: Upload execution timetable
        if: always()
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: exec_timetable
          path: exec_timetable.json

      # This step uses Github Actions secrets FAIL_MAIL_USERNAME and FAIL_MAIL_PASSWORD 
      # which are Gmail username and password respectively.
      - name: Send an email alert if there are any failed steps 
        if: failure()
        uses: dawidd6/action-send-mail@db36373cbed0fba7d5e12c338b580277550bdba1
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.FAIL_MAIL_USERNAME }}
          password: ${{ secrets.FAIL_MAIL_PASSWORD }}
          subject: rain_alert app run ${{ github.run_number }} failed
          # send to itself
          to: ${{ secrets.FAIL_MAIL_USERNAME }}
          from: https://github.com/IvanVnucec/rain_alert
          body: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          # TODO: Add the workflow logs to the attachments 
          #attachments:
